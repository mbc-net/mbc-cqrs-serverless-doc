{
  "Learn about the Tenant Service for managing tenant-level operations in a multi-tenant serverless CQRS architecture.": "マルチテナントサーバーレスCQRSアーキテクチャにおけるテナントレベルの操作を管理するためのテナントサービスについて学びます。",
  "Tenant": "テナント",
  "The Tenant Service provides functionality for managing tenant-level operations in a multi-tenant serverless CQRS architecture": "テナントサービスは、マルチテナントサーバーレスCQRSアーキテクチャにおけるテナントレベルの操作を管理する機能を提供します。",
  "Overview": "概要",
  "The Tenant Service is designed to": "テナントサービスは次の目的で設計されています:",
  "Manage tenant-level entity operations": "テナントレベルのエンティティ操作を管理",
  "Implement CRUD operations for tenant entities": "テナントエンティティのCRUD操作を実装",
  "Ensure proper isolation between different tenants": "異なるテナント間の適切な分離を確保",
  "Validate tenant codes and maintain tenant integrity": "テナントコードを検証し、テナントの整合性を維持",
  "Installation": "インストール",
  "Basic Usage": "基本的な使い方",
  "API Reference": "APIリファレンス",
  "`getTenant(key: DetailKey): Promise<DataModel>`": "`getTenant(key: DetailKey): Promise<DataModel>`",
  "Retrieves tenant details based on the given key.": "指定されたキーに基づいてテナントの詳細を取得します。",
  "`createCommonTenant(dto: CommonTenantCreateDto, context: { invokeContext: IInvoke }):Promise<CommandModel>`": "`createCommonTenant(dto: CommonTenantCreateDto, context: { invokeContext: IInvoke }):Promise<CommandModel>`",
  "Creates a common tenant that is shared across the entire system.": "システム全体で共有される共通のテナントを作成します。",
  "` createTenant(dto: TenantCreateDto,context: { invokeContext: IInvoke },): Promise<CommandModel>`": "` createTenant(dto: TenantCreateDto,context: { invokeContext: IInvoke },): Promise<CommandModel>`",
  "Creates a tenant for an individual entity.": "個別のエンティティのためのテナントを作成します。",
  "` updateTenant(key: DetailKey,dto: TenantUpdateDto,context: { invokeContext: IInvoke }): Promise<CommandModel>`": "` updateTenant(key: DetailKey,dto: TenantUpdateDto,context: { invokeContext: IInvoke }): Promise<CommandModel>`",
  "Updates an existing tenant's details.": "既存のテナントの詳細を更新します。",
  "`deleteTenant(key: DetailKey,context: { invokeContext: IInvoke }): Promise<CommandModel>`": "`deleteTenant(key: DetailKey,context: { invokeContext: IInvoke }): Promise<CommandModel>`",
  "Deletes a tenant based on the provided key": "指定されたキーに基づいてテナントを削除します。",
  "`addTenantGroup(dto: TenantGroupAddDto,context: { invokeContext: IInvoke }): Promise<CommandModel>`": "",
  "Adds a group to a specific tenant.": "特定のテナントにグループを追加します。",
  "`customizeSettingGroups(dto: TenantGroupUpdateDto,context: { invokeContext: IInvoke }): Promise<CommandModel>`": "",
  "Customizes the settings of groups associated with a tenant.": "テナントに関連するグループの設定をカスタマイズします。"
}