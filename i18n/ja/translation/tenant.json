{
  "Tenant related recipes.": "",
  "Tenant": "",
  "Purpose": "",
  "The Tenant Package is designed to create and manage multi-tenancy for the system.": "",
  "Current features include:": "",
  "Creating a **`COMMON`** tenant shared across the entire system": "",
  "Creating tenants for individual entities": "",
  "Editing tenants": "",
  "Deleting tenants": "",
  "Adding groups to tenants": "",
  "Usage": "",
  "The solution for customizing the behavior of the `TenantModule` is to pass it an options `object` in the static `register()` method. The options object is only contain one property:": "",
  "`enableController`: enable or disable default tenant controller.": "",
  "The `TenantService` have public methods:": "",
  "`getTenant(key: DetailKey): Promise<DataModel>`": "",
  "**Description**:": "",
  "Retrieves tenant details based on the given key.": "",
  "**Parameters**": "",
  "`key`: `DetailKey`": "",
  "`sk`: `string`": "",
  "`pk`: `string`": "",
  "`createCommonTenant(dto: CommonTenantCreateDto, context: { invokeContext: IInvoke }):Promise<CommandModel>`": "",
  "Creates a common tenant that is shared across the entire system.": "",
  "Parameters": "",
  "`dto`: `CommonTenantCreateDto`": "",
  "`name`: `string`": "",
  "`description?`: `string`": "",
  "` createTenant(dto: TenantCreateDto,context: { invokeContext: IInvoke },): Promise<CommandModel>`": "",
  "Creates a tenant for an individual entity.": "",
  "`dto`: `TenantCreateDto`": "",
  "`code`: `string`": "",
  "` updateTenant(key: DetailKey,dto: TenantUpdateDto,context: { invokeContext: IInvoke }): Promise<CommandModel>`": "",
  "Updates an existing tenant's details.": "",
  "`dto`: `TenantUpdateDto`": "",
  "`attributes?`: `object`": "",
  "`deleteTenant(key: DetailKey,context: { invokeContext: IInvoke }): Promise<CommandModel>`": "",
  "Deletes a tenant based on the provided key": "",
  "` addTenantGroup(dto: TenantGroupAddDto,context: { invokeContext: IInvoke }): Promise<CommandModel>`": "",
  "Adds a group to a specific tenant.": "",
  "`dto`: `TenantGroupAddDto`": "",
  "`tenantCode`: `string`": "",
  "`groupId`: `string`": "",
  "`role`: `string`": "",
  "`  customizeSettingGroups(dto: TenantGroupUpdateDto,context: { invokeContext: IInvoke }): Promise<CommandModel>`": "",
  "Customizes the settings of groups associated with a tenant.": "",
  "`dto`: `TenantGroupUpdateDto`": "",
  "`settingGroups`: `string[]`": ""
}