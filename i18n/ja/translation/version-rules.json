{
  "Learn about versioning rules and optimistic locking": "バージョン管理ルールと楽観的ロックについて学ぶ",
  "Versioning Rules": "バージョン管理ルール",
  "The MBC CQRS Serverless Framework implements optimistic locking using version numbers to ensure data consistency in distributed systems. This guide explains the versioning rules and provides examples of their implementation.": "MBC CQRS Serverless フレームワークは、分散システムでのデータ整合性を確保するために、バージョン番号を使用した楽観的ロックを実装しています。このガイドでは、バージョン管理ルールとその実装例について説明します。",
  "Basic Rules": "基本ルール",
  "Sequential Versioning for Same PK/SK": "同一PK/SKの順次バージョン管理",
  "Items with the same pk/sk combination must have versions set sequentially starting from 1": "同じpk/skの組み合わせを持つアイテムは、バージョン1から順番に設定する必要があります",
  "Each update increments the version number by 1": "更新ごとにバージョン番号が1ずつインクリメントされます",
  "Only the first request with a given version will succeed": "特定のバージョンでは最初のリクエストのみが成功します",
  "Subsequent requests with the same version will fail with a conflict error": "同じバージョンの後続のリクエストは競合エラーで失敗します",
  "Independent Version Sequences": "独立したバージョンシーケンス",
  "Different pk/sk combinations each start their own version sequence from 1": "異なるpk/skの組み合わせは、それぞれバージョン1から独自のシーケンスを開始します",
  "Version sequences are managed independently for each pk/sk combination": "バージョンシーケンスは各pk/skの組み合わせで独立して管理されます",
  "This allows parallel operations on different items without version conflicts": "これにより、異なるアイテムへの並行操作がバージョン競合なく実行可能です",
  "Optimistic Locking": "楽観的ロック",
  "Used to prevent concurrent updates to the same item": "同一アイテムへの同時更新を防ぐために使用されます",
  "Version number is automatically incremented with each update": "バージョン番号は更新ごとに自動的にインクリメントされます",
  "Throws ConditionalCheckFailedException on version conflicts": "バージョン競合時にConditionalCheckFailedExceptionをスローします",
  "Ensures data consistency in distributed environments": "分散環境でのデータ整合性を確保します",
  "Implementation Examples": "実装例",
  "Basic Version Handling": "基本的なバージョン管理",
  "Initial create with version 0": "バージョン0で作成",
  "Update with correct version": "正しいバージョンで更新",
  "Version Conflict Handling": "バージョン競合の処理",
  "First update succeeds": "最初の更新は成功",
  "Second update with same version fails": "同じバージョンでの2回目の更新は失敗",
  "Conflict": "競合",
  "Both items start at version 1": "両方のアイテムがバージョン1で開始",
  "Update first item": "最初のアイテムを更新",
  "Second item still at version 1": "2番目のアイテムはまだバージョン1",
  "Best Practices": "ベストプラクティス",
  "Always include version number in update operations": "更新操作には必ずバージョン番号を含める",
  "Handle version conflict errors gracefully in your application": "アプリケーションでバージョン競合エラーを適切に処理する",
  "Use appropriate retry strategies for handling conflicts": "競合処理に適切なリトライ戦略を使用する",
  "Consider implementing exponential backoff for retries": "リトライには指数バックオフを検討する",
  "Document version handling in your API documentation": "APIドキュメントにバージョン管理の仕様を記載する"
}
