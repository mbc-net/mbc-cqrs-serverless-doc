{
  "Learn how to write e2e test": "Learn how to write e2e test",
  "End-to-end test": "End-to-end test",
  "Unlike unit testing, which focuses on individual modules and classes, end-to-end (e2e) testing covers the interaction of classes and modules at a more aggregate level -- closer to the kind of interaction that end-users will have with the production system. As an application grows, it becomes hard to manually test the end-to-end behavior of each API endpoint. Automated end-to-end tests help us ensure that the overall behavior of the system is correct and meets project requirements.": "Unlike unit testing, which focuses on individual modules and classes, end-to-end (e2e) testing covers the interaction of classes and modules at a more aggregate level -- closer to the kind of interaction that end-users will have with the production system. As an application grows, it becomes hard to manually test the end-to-end behavior of each API endpoint. Automated end-to-end tests help us ensure that the overall behavior of the system is correct and meets project requirements.",
  "e2e testing tests the API in a real environment, so there’s no need to mock any services. To summarize, there are five main steps for writing an e2e test:": "e2e testing tests the API in a real environment, so there’s no need to mock any services. To summarize, there are five main steps for writing an e2e test:",
  "Create necessary data.": "Create necessary data.",
  "Make API calls using the Supertest library to simulate HTTP requests.": "Make API calls using the Supertest library to simulate HTTP requests.",
  "Check data is correct or not": "Check data is correct or not",
  "Clean data": "Clean data",
  "Here is the scaffolds default e2e tests for applications:": "Here is the scaffolds default e2e tests for applications:",
  "GitHub Actions Setup": "GitHub Actions Setup",
  "To automate E2E testing in your CI/CD pipeline, you'll need to set up GitHub Actions. Here's a comprehensive guide on configuring GitHub Actions for E2E testing:": "To automate E2E testing in your CI/CD pipeline, you'll need to set up GitHub Actions. Here's a comprehensive guide on configuring GitHub Actions for E2E testing:",
  "Runner Configuration": "Runner Configuration",
  "Your workflow needs to be configured with appropriate runner settings based on your environment. For MBC-NET repositories, the runner configuration must be specified exactly as:": "Your workflow needs to be configured with appropriate runner settings based on your environment. For MBC-NET repositories, the runner configuration must be specified exactly as:",
  "Important notes": "Important notes",
  "Case sensitivity is critical: 'ARM64' must be uppercase": "Case sensitivity is critical: 'ARM64' must be uppercase",
  "'linux' must be lowercase": "'linux' must be lowercase",
  "All three labels are required": "All three labels are required",
  "The order of labels matters": "The order of labels matters",
  "When using self-hosted runners, ensure proper configuration of labels and permissions based on your environment setup.": "When using self-hosted runners, ensure proper configuration of labels and permissions based on your environment setup.",
  "Environment Setup": "Environment Setup",
  "The workflow requires several services and configurations:": "The workflow requires several services and configurations:",
  "Docker Services": "Docker Services",
  "Directory Permissions": "Directory Permissions",
  "Docker Container Health Checks": "Docker Container Health Checks",
  "Docker コンテナのヘルスチェックは、コンテナの状態を監視するために重要です。ヘルスチェックの設定には、以下の2つのコンテキストを考慮する必要があります：": "Docker コンテナのヘルスチェックは、コンテナの状態を監視するために重要です。ヘルスチェックの設定には、以下の2つのコンテキストを考慮する必要があります：",
  "Docker コンテナ内部からのヘルスチェック": "Docker コンテナ内部からのヘルスチェック",
  "GitHub Actions ワークフローからのヘルスチェック": "GitHub Actions ワークフローからのヘルスチェック",
  "注意": "注意",
  "Docker コンテナ内部では、サービス名（例：dynamodb-local）を使用してサービスにアクセスします": "Docker コンテナ内部では、サービス名（例：dynamodb-local）を使用してサービスにアクセスします",
  "GitHub Actions のワークフローステップでは localhost を使用します（ポートフォワーディングにより）": "GitHub Actions のワークフローステップでは localhost を使用します（ポートフォワーディングにより）",
  "より堅牢なヘルスチェックのために、単純な接続チェック（nc コマンド）ではなく、実際の API コールを使用することを推奨します": "より堅牢なヘルスチェックのために、単純な接続チェック（nc コマンド）ではなく、実際の API コールを使用することを推奨します",
  "ネットワークの問題が発生した場合は、以下を確認してください：": "ネットワークの問題が発生した場合は、以下を確認してください：",
  "Docker Compose のネットワーク設定": "Docker Compose のネットワーク設定",
  "ポートマッピングの設定": "ポートマッピングの設定",
  "コンテナ間の名前解決": "コンテナ間の名前解決",
  "GitHub Actions ランナーの環境変数": "GitHub Actions ランナーの環境変数",
  "Service Configuration": "Service Configuration",
  "Each service should be configured with:": "Each service should be configured with:",
  "Proper user permissions in Dockerfile": "Proper user permissions in Dockerfile",
  "Volume management": "Volume management",
  "Health check mechanisms": "Health check mechanisms",
  "Workflow Example": "Workflow Example",
  "Here's a complete example of a GitHub Actions workflow for E2E testing:": "Here's a complete example of a GitHub Actions workflow for E2E testing:"
}