{
  "Tenant related recipes.": "Tenant related recipes.",
  "Tenant": "Tenant",
  "Purpose": "Purpose",
  "The Tenant Package is designed to create and manage multi-tenancy for the system.": "The Tenant Package is designed to create and manage multi-tenancy for the system.",
  "Current features include:": "Current features include:",
  "Creating a **`COMMON`** tenant shared across the entire system": "Creating a **`COMMON`** tenant shared across the entire system",
  "Creating tenants for individual entities": "Creating tenants for individual entities",
  "Editing tenants": "Editing tenants",
  "Deleting tenants": "Deleting tenants",
  "Adding groups to tenants": "Adding groups to tenants",
  "Usage": "Usage",
  "The solution for customizing the behavior of the `TenantModule` is to pass it an options `object` in the static `register()` method. The options object is only contain one property:": "The solution for customizing the behavior of the `TenantModule` is to pass it an options `object` in the static `register()` method. The options object is only contain one property:",
  "`enableController`: enable or disable default tenant controller.": "`enableController`: enable or disable default tenant controller.",
  "The `TenantService` have public methods:": "The `TenantService` have public methods:",
  "`getTenant(key: DetailKey): Promise<DataModel>`": "`getTenant(key: DetailKey): Promise<DataModel>`",
  "**Description**:": "**Description**:",
  "Retrieves tenant details based on the given key.": "Retrieves tenant details based on the given key.",
  "**Parameters**": "**Parameters**",
  "`key`: `DetailKey`": "`key`: `DetailKey`",
  "`sk`: `string`": "`sk`: `string`",
  "`pk`: `string`": "`pk`: `string`",
  "`createCommonTenant(dto: CommonTenantCreateDto, context: { invokeContext: IInvoke }):Promise<CommandModel>`": "`createCommonTenant(dto: CommonTenantCreateDto, context: { invokeContext: IInvoke }):Promise<CommandModel>`",
  "Creates a common tenant that is shared across the entire system.": "Creates a common tenant that is shared across the entire system.",
  "Parameters": "Parameters",
  "`dto`: `CommonTenantCreateDto`": "`dto`: `CommonTenantCreateDto`",
  "`name`: `string`": "`name`: `string`",
  "`description?`: `string`": "`description?`: `string`",
  "` createTenant(dto: TenantCreateDto,context: { invokeContext: IInvoke },): Promise<CommandModel>`": "` createTenant(dto: TenantCreateDto,context: { invokeContext: IInvoke },): Promise<CommandModel>`",
  "Creates a tenant for an individual entity.": "Creates a tenant for an individual entity.",
  "`dto`: `TenantCreateDto`": "`dto`: `TenantCreateDto`",
  "`code`: `string`": "`code`: `string`",
  "` updateTenant(key: DetailKey,dto: TenantUpdateDto,context: { invokeContext: IInvoke }): Promise<CommandModel>`": "` updateTenant(key: DetailKey,dto: TenantUpdateDto,context: { invokeContext: IInvoke }): Promise<CommandModel>`",
  "Updates an existing tenant's details.": "Updates an existing tenant's details.",
  "`dto`: `TenantUpdateDto`": "`dto`: `TenantUpdateDto`",
  "`attributes?`: `object`": "`attributes?`: `object`",
  "`deleteTenant(key: DetailKey,context: { invokeContext: IInvoke }): Promise<CommandModel>`": "`deleteTenant(key: DetailKey,context: { invokeContext: IInvoke }): Promise<CommandModel>`",
  "Deletes a tenant based on the provided key": "Deletes a tenant based on the provided key",
  "` addTenantGroup(dto: TenantGroupAddDto,context: { invokeContext: IInvoke }): Promise<CommandModel>`": "` addTenantGroup(dto: TenantGroupAddDto,context: { invokeContext: IInvoke }): Promise<CommandModel>`",
  "Adds a group to a specific tenant.": "Adds a group to a specific tenant.",
  "`dto`: `TenantGroupAddDto`": "`dto`: `TenantGroupAddDto`",
  "`tenantCode`: `string`": "`tenantCode`: `string`",
  "`groupId`: `string`": "`groupId`: `string`",
  "`role`: `string`": "`role`: `string`",
  "`  customizeSettingGroups(dto: TenantGroupUpdateDto,context: { invokeContext: IInvoke }): Promise<CommandModel>`": "`  customizeSettingGroups(dto: TenantGroupUpdateDto,context: { invokeContext: IInvoke }): Promise<CommandModel>`",
  "Customizes the settings of groups associated with a tenant.": "Customizes the settings of groups associated with a tenant.",
  "`dto`: `TenantGroupUpdateDto`": "`dto`: `TenantGroupUpdateDto`",
  "`settingGroups`: `string[]`": "`settingGroups`: `string[]`"
}