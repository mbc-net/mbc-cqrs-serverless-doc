"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[750],{111:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var n=s(4848),i=s(8453);const r={description:"Learn how to use DataService."},c="DataService",a={id:"data-service",title:"DataService",description:"Learn how to use DataService.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/data-service.md",sourceDirName:".",slug:"/data-service",permalink:"/mbc-cqrs-serverless/docs/data-service",draft:!1,unlisted:!1,editUrl:"https://github.com/mbc-net/mbc-cqrs-serverless-doc/docs/data-service.md",tags:[],version:"current",frontMatter:{description:"Learn how to use DataService."},sidebar:"tutorialSidebar",previous:{title:"CommandService",permalink:"/mbc-cqrs-serverless/docs/command-service"},next:{title:"NotificationModule",permalink:"/mbc-cqrs-serverless/docs/notification-module"}},o={},d=[{value:"Description",id:"description",level:2},{value:"Methods",id:"methods",level:2},{value:"<em>async</em> <code>getItem(key: DetailKey)</code>",id:"async-getitemkey-detailkey",level:3},{value:"<em>async</em> <code>listItemsByPk( pk: string, opts?: ...)</code>",id:"async-listitemsbypk-pk-string-opts-",level:3}];function l(e){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"dataservice",children:"DataService"})}),"\n",(0,n.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,n.jsx)(t.p,{children:"The methods of this service are primarily used to query data from the data table."}),"\n",(0,n.jsxs)(t.p,{children:["Before jumping into the example, you need to set up the CommandModule as described in ",(0,n.jsx)(t.a,{href:"/mbc-cqrs-serverless/docs/command-module",children:"the previous section"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsxs)(t.h3,{id:"async-getitemkey-detailkey",children:[(0,n.jsx)(t.em,{children:"async"})," ",(0,n.jsx)(t.code,{children:"getItem(key: DetailKey)"})]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"getItem"})," method returns a set of attributes for the item with the given detail/primary key. If there is no matching item, ",(0,n.jsx)(t.code,{children:"getItem"})," does not return any data and there will be no item element in the response."]}),"\n",(0,n.jsx)(t.p,{children:"Example:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"const item = await this.dataService.getItem(detailDto);\n\nif (!item) {\n  throw new NotFoundException();\n}\nreturn new CatDataEntity(item as CatDataEntity);\n"})}),"\n",(0,n.jsxs)(t.h3,{id:"async-listitemsbypk-pk-string-opts-",children:[(0,n.jsx)(t.em,{children:"async"})," ",(0,n.jsx)(t.code,{children:"listItemsByPk( pk: string, opts?: ...)"})]}),"\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"listItemsByPk"})," method returns one or more items."]}),"\n",(0,n.jsx)(t.p,{children:"There are two common usage:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["List all item by primary key (",(0,n.jsx)(t.code,{children:"pk"}),")"]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Example:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"const res = await this.dataService.listItemsByPk(pk);\nreturn new CatListEntity(res as CatListEntity);\n"})}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["List items by primary key (",(0,n.jsx)(t.code,{children:"pk"}),") and use a filter expression on the sort key (",(0,n.jsx)(t.code,{children:"sk"}),")."]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["For example, if you want to get an item by its primary key (",(0,n.jsx)(t.code,{children:"pk"}),"), where the sort key (",(0,n.jsx)(t.code,{children:"sk"}),")starts with the value ",(0,n.jsx)(t.code,{children:"CAT#"})," and limit 100 item."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:'const query = {\n  sk: {\n    skExpession: "begins_with(sk, :typeCode)",\n    skAttributeValues: {\n      ":typeCode": `CAT${KEY_SEPARATOR}`,\n    },\n  },\n  limit: 100,\n};\nconst res = await this.dataService.listItemsByPk(pk, query);\nreturn new CatDataListEntity(res as CatDataListEntity);\n'})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>a});var n=s(6540);const i={},r=n.createContext(i);function c(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);